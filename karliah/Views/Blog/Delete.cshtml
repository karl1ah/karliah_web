    @model deneme_projesi.Models.Blog

@{
    ViewBag.Title = "Delete";
    Layout = "~/Views/Shared/_LayoutPageAdmin.cshtml";
}




<div class="container">
    <div class="alert alert-warning"><h3>bu bloğu silmek istediğinize eminmisiniz</h3></div>
    
    <hr />
    <div>
        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            @Html.HiddenFor(model => model.Id)

            <div class="form-group row">
                @Html.LabelFor(model => model.baslik, new { @class = "control-label col-md-1" })
                <div class="col-md-11">
                    @Html.TextBoxFor(model => model.baslik, new { @class = "form-control", disabled = "disabled" })
                    @Html.ValidationMessageFor(model => model.baslik, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Aciklama, new { @class = "control-label col-md-1" })
                <div class="col-md-11">
                    @Html.TextAreaFor(model => model.Aciklama, new { @class = "form-control", disabled = "disabled" })
                    @Html.ValidationMessageFor(model => model.Aciklama, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Icerik, new { @class = "control-label col-md-1" })
                <div class="col-md-11">
                    @Html.TextAreaFor(model => model.Icerik, new { @class = "form-control", disabled = "disabled" })
                    @Html.ValidationMessageFor(model => model.Icerik, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(model => model.Onay, new { @class = "control-label col-md-1" })
                <div class="col-md-11">
                    <div class="form-check form-switch">
                        @Html.CheckBoxFor(model => model.Onay, new { @class = "form-check-input", type = "checkbox", id = "flexSwitchCheckDefault", disabled = "disabled" })
                        @Html.ValidationMessageFor(model => model.Onay, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Anasayfa, new { @class = "control-label col-md-1" })
                <div class="col-md-11">
                    <div class="form-check form-switch">
                        @Html.CheckBoxFor(model => model.Anasayfa, new { @class = "form-check-input", type = "checkbox", id = "flexSwitchCheckDefault", disabled = "disabled" })
                        @Html.ValidationMessageFor(model => model.Anasayfa, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Resim, new { @class = "control-label col-md-1" })
                <div class="col-md-11 ">
                    @Html.TextBoxFor(model => model.Resim, new { @class = "form-control", disabled = "disabled" })
                    @Html.ValidationMessageFor(model => model.Resim, "", new { @class = "text-danger" })
                </div>
            </div>

    </div>

    @using (Html.BeginForm()) {
        @Html.AntiForgeryToken()

        <div class="form-actions no-color">
            <input type="submit" value="Delete" class="btn btn-danger" /> 
            
        </div>
        <div>
            @Html.ActionLink("Listeye geri dön", "Index", null, new { @class = "btn btn-secondary", @style = "text-decoration:dotted; " })
        </div> 
    }
</div>
